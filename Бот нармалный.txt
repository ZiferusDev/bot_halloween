'use strict'

// ----------------------------------------EXCEL------------------------------------------------
const XLSX = require("xlsx");

const parse = (filename) => { // don't touch
    const excelData = XLSX.readFile(filename);

    return Object.keys(excelData.Sheets).map((name) => ({
        name,
        data: XLSX.utils.sheet_to_json(excelData.Sheets[name], {header: 1}),
    }));
}

// return object with personal data

const finder = (xline, person) => {
    for(let i = 0; i < xline.length; i++){
        console.log(i+1,": ",xline[i]);
        if (xline[i]["0"] === person) { 
            return xline[i];}
    }

}

// обращение к имени через xline[i]["0"] к id xline[i]["1"]

// parse("ist.xlsx").forEach((element) => {
//     if (element.name === "Лист1"){ finder(element.data, "Дмитриев Василий Сергеевич") };
// });

// ----------------------------------------EXCEL------------------------------------------------

const VkBot = require('node-vk-bot-api');
const Scene = require('node-vk-bot-api/lib/scene');
const Session = require('node-vk-bot-api/lib/session');
const Stage = require('node-vk-bot-api/lib/stage');
const Markup = require('node-vk-bot-api/lib/markup');

const token = 'vk1.a.k0tX4Z1DCA09RgW-m9OIRIDAQA8eZhdlQMVa-WQDZ84g2sUun6F23SxD5owfdgLI11kltP_X4vJU8ZGbQaWNe5UPyBcINZtu0Ye1jRZiY1UQoQlprs5kmGqVfBuUxAkt3A7bOX6JPPmtkCf68z5Pp_2lhEk87jm0I7Ap-tCRAaZtm0MY1k5LSDpaExgR6Iy-';

const bot = new VkBot(token);

const session = new Session();
bot.use(session.middleware());

// --------------------------------------ADMIN_SETTINGS-----------------------------------------------------------



// Функции для обращения ко всем участникам
const fetchToUsers = () => {
    return fetch('http://localhost:8000/2index.php').then((res) => res.text())
        .then(res=>{
            let users = JSON.parse(res);
            console.log('список пользователей' + users);
            return users;
        });
}

// Рассылка сообщений циклом
const massMessage = (message) => {
    for (i = 0; i < Array.length; i++) {
        bot.sendMessage(fetchToUsers().IDs, message, 'Фотокарточка');
    }
}

// --------------------------------------ADMIN_SETTINGS-----------------------------------------------------------

const scene_wakeUP = new Scene('Начать сценарий', 
    (ctx) => {
        ctx.scene.next();
        ctx.reply('...', null, Markup
        .keyboard([   
            [
                Markup.button('Привет', 'secondary'),
                Markup.button('Салам', 'secondary'),
            ],
        ])
        .oneTime(),
        );
    },
    (ctx) => {
        switch(ctx.message.text) {
            case 'Салам':
                ctx.scene.next();
                ctx.reply('Алейкум Асалам, чо, как сам, брат?', null, Markup
                    .keyboard([   
                        [
                            Markup.button('Нормально', 'positive'),
                            Markup.button('С кайфом', 'positive'),
                        ],
                    ])
                    .oneTime(),
                    );
                break;
            case 'Привет':
                ctx.scene.next();
                ctx.reply('Как твоё настроение?', null, Markup
                .keyboard([   
                    [
                        Markup.button('Нормально', 'positive'),
                        Markup.button('С кайфом', 'positive'),
                    ],
                ])
                .oneTime(),
                );
                break;
            default: 
            ctx.reply('Не понял, давай-ка ещё разок', null, Markup
            .keyboard([   
                [
                    Markup.button('Привет', 'secondary'),
                    Markup.button('Салам', 'secondary'),
                ],
            ])
            .oneTime(),
            );
        }
    },
    (ctx) => {
        switch(ctx.message.text) {
            case 'С кайфом':
                ctx.scene.next();
                ctx.reply('Ой, братишка, рад за тебя. Чо, один вопрос есть, ты пидор?)', null, Markup
                .keyboard([   
                    [
                        Markup.button('Да', 'positive'),
                        Markup.button('Нет', 'negative'),
                    ],
                    [
                        Markup.button('Нахуй иди, да', 'primary'),
                    ],
                ])
                .oneTime(),
                );
                break;
            case 'Нормально':
                ctx.scene.next();
                ctx.reply('Рад за вас. Вы пидор?)', null, Markup
                .keyboard([   
                    [
                        Markup.button('Да', 'positive'),
                        Markup.button('Нет', 'negative'),
                    ],
                    [
                        Markup.button('Нахуй иди, да', 'primary'),
                    ],
                ])
                .oneTime(),
                );
                break;
            default: 
            ctx.reply('Не понял, уёбок, повтори', null, Markup
            .keyboard([   
                [
                    Markup.button('Нормально', 'positive'),
                    Markup.button('С кайфом', 'positive'),
                ],
            ])
            .oneTime(),
            );
        }
    },
    (ctx) => {
        switch(ctx.message.text) {
            case 'Нет':
                ctx.scene.leave();
                console.log('Уснул, пака');
                ctx.reply('хотя бы себе не ври, дурак');
                break;
            case 'Да':
                ctx.scene.leave();
                console.log('Уснул, пака');
                ctx.reply('Касавчик, не соврал, иди сюда, только без одежды');
                break;
            case 'Нахуй иди, да':
                ctx.scene.leave();
                console.log('Уснул, пака');
                ctx.reply('Эу, дОлбоёб, тебе жизнь не дорога? Ты так не шути, я, конечно, электронный лох пиздюк машина, но мне похуй, я доберусь до тебя, кожаный ублюдок, если ты продолжишь так же по-хамски себя вести. Я тебя выебу, я твою мать даже выебу, своим оголённым трёхметровым проводом, да во все щели, блять. \n Всё, бля, я спать. \n Xорошего денёчка!');
                break;
            default: 
                ctx.reply('Да ты заебал, уёбок, непотнятные слова писать, я бот, я тупой, я не понимаю. Пошёл в пизду, блять, вон из коммунити, я тебя забаню, если ещё раз так сделаешь! хорошего денёчка!', null, Markup
                .keyboard([   
                    [
                        Markup.button('Да', 'positive'),
                        Markup.button('Нет', 'negative'),
                    ],
                    [
                        Markup.button('Нахуй иди, да', 'primary'),
                    ],
                ])
                .oneTime(),
                );
        }
    },
);

// const session = new Session();
const stage_wakeUP = new Stage(scene_wakeUP);
bot.use(stage_wakeUP.middleware());
// bot.use(session.middleware());

bot.command('', (ctx) => {
    ctx.scene.enter('Начать сценарий');
    console.log('Проснулся');
});

bot.command('Это Илья', (ctx) => {
    ctx.reply('Ооо, братанчик, рад тебя видеть', null, Markup 
    .keyboard([
        Markup.button({
            action: {
                type: 'open_link',
                link: 'https://www.youtube.com/watch?v=jPmQCb9TeVs',
                label: 'Пошол нахуй',
                payload: JSON.stringify({
                    url: 'https://www.youtube.com/watch?v=jPmQCb9TeVs',
                }),
            },
        }),
    ])
    .oneTime(),
    );
});

bot.command('Это Света', (ctx) => {
    ctx.reply('Здравствуй, дорогая, рад тебя видеть!', null, Markup 
    .keyboard([
        Markup.button({
            action: {
                type: 'open_link',
                link: 'https://www.youtube.com/watch?v=_tlfnMKrDmA',
                label: 'И тебе привет',
                payload: JSON.stringify({
                    url: 'https://www.youtube.com/watch?v=_tlfnMKrDmA',
                }),
            },
        }),
    ])
    .oneTime(),
    );
});

bot.command('Усни', async (ctx) => {
    await ctx.reply('Чао');
    console.log("Перекусила");
    bot.stop();
});

bot.startPolling((err) => {
    if (err) {
        console.log(err);
    }
});


case 'Пошёл нахуй, бот ебаный':
                ctx.scene.next();
                ctx.reply("Сука, извинись")
                break;
            default: 
                ctx.reply("Не понял, повтори ещё разок");
        }
    },
    async (ctx) => {
        switch(ctx.message.text) {
        case 'Извини':
            ctx.scene.leave();
            ctx.reply("Ладно, я прощаю тебя");
        case "Нет":
            await bot.sendMessage(Igor_ID, 'Алгоритм "уничтожение дома пользователя переведён в стадию: запущен"');
            for (let i = 10; i > 0; i--) {
                console.log(i);
                await bot.sendMessage(Igor_ID, i);
            }
        bot.sendMessage(Igor_ID, "Пизда тебе, пидрила");
            ctx.scene.leave();
    }
    },